{
    "swagger": "2.0",
    "info": {
        "version": "1.1.0",
        "title": "WSO2 APP Manager - Publisher API",
        "description": "This document specifies a **RESTful API** for **WSO2 APP Manager - Publisher**.\n\n\n\n\nIt is written with [swagger 2](http://swagger.io/).\n",
        "contact": {
            "name": "WSO2",
            "url": "http://wso2.com/products/app-manager/",
            "email": "architecture@wso2.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "schemes": [
        "http"
    ],
    "host": "apis.wso2.com",
    "basePath": "/api/appm/publisher/v1.1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "x-wso2-security": {
        "appm": {
            "x-wso2-scopes": [
                {
                    "description": "",
                    "roles": "admin",
                    "name": "appm:read",
                    "key": "appm:read"
                },
                {
                    "description": "",
                    "roles": "admin",
                    "name": "appm:create",
                    "key": "appm:create"
                },
                {
                    "description": "",
                    "roles": "admin",
                    "name": "appm:update",
                    "key": "appm:update"
                },
                {
                    "description": "",
                    "roles": "admin",
                    "name": "appm:administration",
                    "key": "appm:administration"
                },
                {
                    "description": "",
                    "roles": "admin",
                    "name": "appm:publish",
                    "key": "appm:publish"
                }
            ]
        }
    },
    "paths": {
        "/apps/{appType}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer f126676fc6fc2d2d7828220c992c9b15\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp\"",
                "x-wso2-response": "{\"previous\":\"\",\"next\":\"\",\"count\":2,\"appList\":[{\"name\":\"app1\",\"context\":null,\"id\":\"af929140-1257-46ed-97c0-d26098e140e9\",\"rating\":0.0,\"lifecycleState\":\"IN-REVIEW\",\"provider\":\"admin\",\"description\":\"asdasd\",\"version\":\"1\"},{\"name\":\"app2\",\"context\":null,\"id\":\"5c9c8551-d696-4c44-85a6-dcd86f1a1e25\",\"rating\":0.0,\"lifecycleState\":\"CREATED\",\"provider\":\"admin\",\"description\":\"phone\",\"version\":\"1.0\"}]}",
                "summary": "Get all Apps",
                "description": "Get a list of available Apps qualifying under a given search condition.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": "A search condition.\n\n\n\n\nYou can search attributes by using an **\"attribute:\"** modifier.\n\n\n\n\nEg. \"provider:wso2\" will match an App if the provider of the App contains \"wso2\".\n\n\n\n\nSupported attribute modifiers are [**provider, app_name, app_version, app_id, business_owner_id**]\n\n\n\n\nIf no advanced attribute modifier has been specified, the search will match the\ngiven query string against the App name.\n",
                        "type": "string"
                    },
                    {
                        "$ref": "#/parameters/fieldFilter"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of qualifying Apps is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/AppList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -v -X POST 'http://localhost:9763/api/appm/publisher/v1.1/apps/mobileapp' -H \"Content-Type: application/json\" -d '{\"appmeta\" :{\"path\" : \"/publisher/api/mobileapp/getfile/D3PdRxvU24WK3EN.apk\", \"package\" : \"home.jmstudios.calc\", \"version\" : \"1.0\"},\"name\":\"sample\",\"provider\":\"admin\",\"platform\":\"android\",\"version\":\"1.0.0\", \"banner\":\"/publisher/api/mobileapp/getfile/9YRDRWqOSvzu31IX.jpg\",\"thumbnailUrl\":\"/publisher/api/mobileapp/getfile/62gKWqOSvzu31IX.jpg\",\"screenshots\":[\"/publisher/api/mobileapp/getfile/62gKWqOSvzu31IX.jpg\"],\"displayName\":\"SampleDisplay\",\"description\":\"sample calculator application\",\"platform\":\"android\",\"category\":\"Business\",”marketType”:”enterprise”}'",
                "x-wso2-request": "{\"appmeta\" :{\"path\" : \"/publisher/api/mobileapp/getfile/D3PdRxvU24WK3EN.apk\", \"package\" : \"home.jmstudios.calc\", \"version\" : \"1.0\"},\"name\":\"sample\",\"provider\":\"admin\",\"platform\":\"android\",\"version\":\"1.0.0\", \"banner\":\"/publisher/api/mobileapp/getfile/9YRDRWqOSvzu31IX.jpg\",\"thumbnailUrl\":\"/publisher/api/mobileapp/getfile/62gKWqOSvzu31IX.jpg\",\"screenshots\":[\"/publisher/api/mobileapp/getfile/62gKWqOSvzu31IX.jpg\"],\"displayName\":\"SampleDisplay\",\"description\":\"sample calculator application\",\"platform\":\"android\",\"category\":\"Business\",”marketType”:”enterprise”}",
                "x-wso2-response": "{\"id\" : \"aff9fb92-7e17-4ce8-8024-a747ff5aea41\"}",
                "summary": "Create a new App",
                "description": "Create a new App\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "App object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "201": {
                        "description": "Created.\nSuccessful response with the newly created object as the entity in the body.\nLocation header contains the URL of the newly created entity.\n",
                        "schema": {
                            "$ref": "#/definitions/App"
                        },
                        "headers": {
                            "Location": {
                                "description": "The URL of the newly created resource.\n",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional request\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.\nThe entity of the request was in an unsupported format.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer f126676fc6fc2d2d7828220c992c9b15\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/mobileapp/id/af929140-1257-46ed-97c0-d26098e140e9\"",
                "x-wso2-response": "{\"displayName\":null,\"createdTime\":\"00000001461645676735\",\"bundleVersion\":\"1\",\"packageName\":\"undefined\",\"description\":\"asdasd\",\"version\":\"1\",\"category\":\"Business\",\"tags\":[],\"appType\":\"webapp\",\"appName\":\"asd\",\"appUrl\":\"http://wso2.com\",\"banner\":\"/publisher/api/mobileapp/getfile/pduoTTAgbWAuFxm.JPG\",\"marketType\":null,\"recentChanges\":\"-\",\"appProvider\":\"admin\",\"thumbnail\":\"/publisher/api/mobileapp/getfile/J3TM0iKb6OiapuG.JPG\",\"screenShots\":[\"/publisher/api/mobileapp/getfile/zq7kNCpZkfLsxic.JPG\"],\"appId\":null,\"platform\":\"webapp\",\"appVisibility\":null,\"availableLifecycleActions\":null,\"lifecycleStatus\":\"INREVIEW\",\"type\":\"mobileapp\",\"uuid\":\"af929140-1257-46ed-97c0-d26098e140e9\",\"rating\":0.0}",
                "summary": "Get app details",
                "description": "Get details of an app.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nQualifying App is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/App"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "x-scope": "appm:update",
                "x-wso2-curl": "curl -v -X PUT -H \"Content-Type: application/json\" 'http://localhost:9763/api/appm/publisher/v1.1/apps/mobileapp/id/906249f5-529b-41f3-bf18-d95e9403e9f0' -d '{\"appmeta\" :{\"path\" : \"/publisher/api/mobileapp/getfile/D3PdRxvU24WK3EN.apk\", \"package\" : \"home.jmstudios.calc\", \"version\" : \"1.0\"},\"name\":\"sample\",\"provider\":\"admin\",\"platform\":\"android\",\"version\":\"1.0.0\",\"banner\":\"/publisher/api/mobileapp/getfile/nzcYzFxpWpNHlyk.jpg\",\"thumbnailUrl\":\"/publisher/api/mobileapp/getfile/nzcYzFxpWpNHlyk.jpg\",\"screenshots\":[\"/publisher/api/mobileapp/getfile/62gKWqOSvzu31IX.jpg\"],\"displayName\":\"fdyefyeufuegfyugefyue\",\"description\":\"description\",\"platform\":\"android\",\"category\":\"public\"}'",
                "x-wso2-request": "{\"appmeta\" :{\"path\" : \"/publisher/api/mobileapp/getfile/D3PdRxvU24WK3EN.apk\", \"package\" : \"home.jmstudios.calc\", \"version\" : \"1.0\"},\"name\":\"sample\",\"provider\":\"admin\",\"platform\":\"android\",\"version\":\"1.0.0\",\"banner\":\"/publisher/api/mobileapp/getfile/nzcYzFxpWpNHlyk.jpg\",\"thumbnailUrl\":\"/publisher/api/mobileapp/getfile/nzcYzFxpWpNHlyk.jpg\",\"screenshots\":[\"/publisher/api/mobileapp/getfile/62gKWqOSvzu31IX.jpg\"],\"displayName\":\"fdyefyeufuegfyugefyue\",\"description\":\"description\",\"platform\":\"android\",\"category\":\"public\"}",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Update an existing App",
                "description": "Update an existing App\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "App object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nSuccessful response with updated App object.\n",
                        "schema": {
                            "$ref": "#/definitions/App"
                        },
                        "headers": {
                            "Location": {
                                "description": "The URL of the newly created resource.\n",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the resource was last modifed.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X DELETE -H \"Authorization: Bearer f126676fc6fc2d2d7828220c992c9b15\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/mobileapp/id/af929140-1257-46ed-97c0-d26098e140e9\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Delete App",
                "description": "Delete an existing App\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nResource successfully deleted.\n"
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nResource to be deleted does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/tags": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer e099014668a524870c2895fe0595f125\" \"http://localhost:9763/api/appm/store/v1.1/apps/webapp/tags\"",
                "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n {\"tags\":[\"tagA\",\"tagB\",\"tagC\"]}",
                "summary": "Get all Tags of an App",
                "description": "Get a list of available Tags relevant to the given App Internal ID.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Tags"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of tags is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/TagList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X PUT -H \"Authorization: Bearer 4be7890951f36d5c44a68d5a35227ceb\" \n -H \"Content-Type: application/json\" \n -d '{\"tags\":[\"tagA\",\"tagB\",\"tagC\"]}' \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/00fafc68-d8bb-498f-9ef3-afbb6db06826/tags\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "x-wso2-request": "{\"tags\":[\"tagA\",\"tagB\",\"tagC\"]}",
                "summary": "Add a new tag",
                "description": "Add a new tag/tags to the tag collection of a given application type.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Tag object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TagList"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Tags"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n"
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X DELETE -H \"Authorization: Bearer 4be7890951f36d5c44a68d5a35227ceb\" -H \"Content-Type: application/json\" -d '{\"tags\":[\"tag1\",\"tag2\"]}' \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/95e497dd-ebb0-414f-9718-88857a153780/tags\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Delete Tags relevant to an App",
                "description": "Delete Tags relevant to an App by AppId.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Tag object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TagList"
                        }
                    }
                ],
                "tags": [
                    "Tags"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nResource successfully deleted.\n"
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nResource to be deleted does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/subscriptions": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer e099014668a524870c2895fe0595f125\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/299a478a-0df3-488d-8677-8644f8255222/subscriptions\"",
                "x-wso2-response": "{\"userIds\":[\"admin\",\"user1\",\"user2\"]}",
                "summary": "Get subscribed user list for an App",
                "description": "Get subscribed user list for an App.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nQualifying user list is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/UserIdList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/create-new-version": {
            "post": {
                "x-scope": "appm:create",
                "summary": "Create a new version of an App",
                "description": "Create a new version of an App\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "App object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/App"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "201": {
                        "description": "Created.\nSuccessful response with the newly created object as entity in the body.\nLocation header contains the URL of the newly created entity.\n",
                        "schema": {
                            "$ref": "#/definitions/App"
                        },
                        "headers": {
                            "Location": {
                                "description": "The URL of the newly created resource.\n",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.\nThe entity of the request was in an unsupported format.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/lifecycle": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 0c0338592beefe7225bd6d869e93ca06\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/c9ddf00d-c42f-4299-931c-bcda69c68050/lifecycle\"",
                "x-wso2-response": "{\"actions\":[\"Reject\",\"Approve\"],\"state\":\"IN-REVIEW\",\"async\":true}",
                "summary": "Get lifecycle details",
                "description": "Get lifecycle details of an App.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Lifecycle"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nDetails of a lifecycle is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/LifeCycle"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/lifecycle-history": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 9659421d7eea4c3ed54ef0833fade8f8\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/mobileapp/id/44a49211-7b37-4b30-873e-4373343fdcda/lifecycle-history\"",
                "x-wso2-response": "{\"lifeCycleHistoryList\":[{\"state\":\"Approved\",\"order\":4,\"timestamp\":\"2016-05-20 14:47:16.787\",\"user\":\"wso2.system.user\",\"targetState\":\"Published\"},{\"state\":\"In-Review\",\"order\":3,\"timestamp\":\"2016-05-20 14:47:15.309\",\"user\":\"wso2.system.user\",\"targetState\":\"Approved\"},{\"state\":\"Created\",\"order\":2,\"timestamp\":\"2016-05-20 14:47:13.548\",\"user\":\"wso2.system.user\",\"targetState\":\"In-Review\"},{\"state\":\"Initial\",\"order\":1,\"timestamp\":\"2016-05-20 14:46:59.978\",\"user\":\"admin\",\"targetState\":\"Created\"}]}",
                "summary": "Get lifecycle details",
                "description": "Get lifecycle details.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Lifecycle"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of qualifying Apps is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/LifeCycleHistoryList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/throttlingtiers": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 0b236aa97005945bd9796149e54cd0b7\" \"http:\/\/localhost:9763\/api\/appm\/publisher\/v1.1\/apps\/webapp\/throttlingtiers\"",
                "x-wso2-response": "{\"tierList\":[{\"tierSortKey\":1,\"tierName\":\"Bronze\",\"tierDisplayName\":\"Bronze\",\"tierDescription\":\"Allows 1 request(s) per minute.\"},{\"tierSortKey\":20,\"tierName\":\"Gold\",\"tierDisplayName\":\"Gold\",\"tierDescription\":\"Allows 20 request(s) per minute.\"},{\"tierSortKey\":5,\"tierName\":\"Silver\",\"tierDisplayName\":\"Silver\",\"tierDescription\":\"Allows 5 request(s) per minute.\"},{\"tierSortKey\":10000,\"tierName\":\"Unlimited\",\"tierDisplayName\":\"Unlimited\",\"tierDescription\":\"Allows unlimited requests\"}]}",
                "summary": "Get all Tiers",
                "description": "Get a list of tiers.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Tiers"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of tiers is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/TierList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/docs/{documentId}/content": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 637084f12e5f93b8c4e7a8d7307635ab\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/927068ec-300a-4503-89fc-ef5ebc41a7db/docs/6777080d-99eb-402b-aadc-a00a17e178c3/content\" > sample.pdf",
                "x-wso2-response": "HTTP/1.1 200 OK\nContent-Disposition: attachment; filename=\"sample.pdf\"\nContent-Type: application/octet-stream\nContent-Length: 7802\n\n%PDF-1.4\n%äüöß\n2 0 obj\n<</Length 3 0 R/Filter/FlateDecode>>\nstream\n..\n>>\nstartxref\n7279\n%%EOF",
                "summary": "Get document content",
                "description": "Downloads a FILE type document/get the inline content or source url of a certain document.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/documentId"
                    },
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "App Document"
                ],
                "responses": {
                    "200": {
                        "description": "OK. \nFile or inline content returned.\n",
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource.\nUsed by caches, or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time the resource has been modified the last time. \nUsed by caches, or in conditional reuquests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "303": {
                        "description": "See Other.\nSource can be retrived from the URL specified at the Location header.\n",
                        "headers": {
                            "Location": {
                                "description": "The Source URL of the document.\n",
                                "type": "string"
                            }
                        }
                    },
                    "304": {
                        "description": "Not Modified. \nEmpty body because the client has already the latest version of the requested resource.\n"
                    },
                    "404": {
                        "description": "Not Found. \nRequested Document does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable. \nThe requested media type is not supported\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer 0c28ea242609cdbaef56c80452e0c843\" -H \"Content-Type: multipart/form-data\" -F \"file=@@sample.pdf\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/a7a7dacc-8a1c-428e-930d-d181f60f14bd/docs/6d47f5d5-f046-47e9-a65d-6eb50d5cd05e/content\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Uploading document Content",
                "description": "Uploading document files against an App.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/documentId"
                    },
                    {
                        "in": "formData",
                        "name": "file",
                        "description": "Document to be uploaded.",
                        "type": "file",
                        "required": false
                    },
                    {
                        "in": "formData",
                        "name": "inlineContent",
                        "description": "Inline content of the document.",
                        "type": "string",
                        "required": false
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "App Documents"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nDocument uploaded successfully.\n",
                        "schema": {
                            "$ref": "#/definitions/StaticContent"
                        },
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the changed App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the resource was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nRequested entity does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/docs": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -H \"Authorization: Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/0950b09c-0afe-47f2-88d6-72e9b88b1931/docs\"",
                "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"previous\": \"\",\n   \"list\":    [\n            {\n         \"sourceType\": \"INLINE\",\n         \"sourceUrl\": null,\n         \"otherTypeName\": null,\n         \"documentId\": \"0bcb7f05-599d-4e1a-adce-5cb89bfe58d5\",\n         \"summary\": \"This is a sample documentation for v1.0.0\",\n         \"name\": \"PhoneVerification App Documentation\",\n         \"type\": \"HOWTO\"\n      },\n            {\n         \"sourceType\": \"URL\",\n         \"sourceUrl\": \"http://wiki.cdyne.com/index.php/Phone_Verification\",\n         \"otherTypeName\": null,\n         \"documentId\": \"4145df31-04f1-440c-8d08-68952874622c\",\n         \"summary\": \"This is the URL for online documentation\",\n         \"name\": \"Online Documentation\",\n         \"type\": \"SAMPLES\"\n      }\n   ],\n   \"next\": \"\",\n   \"count\": 2\n}",
                "summary": "Get App Documents",
                "description": "Get a list of documents belonging to an App.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "APP Document"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nDocument list is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/DocumentList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "304": {
                        "description": "Not Modified.\nEmpty body because the client already has the latest version of the requested resource.\n"
                    },
                    "404": {
                        "description": "Not Found.\nRequested resource does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable.\nThe requested media type is not supported.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -H \"Authorization: Bearer 4fc0a364a336a37c663790364da307a3\" -H \"Content-Type:application/json\" -X POST -d @data.json \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/0950b09c-0afe-47f2-88d6-72e9b88b1931/docs\"",
                "x-wso2-request": "{\n    \"sourceType\": \"INLINE\",\n    \"sourceUrl\": null,\n    \"otherTypeName\": null,\n    \"summary\": \"This is a sample documentation\",\n    \"name\": \"Introduction to PhoneVerification API\",\n    \"type\": \"HOWTO\"\n}",
                "x-wso2-response": "HTTP/1.1 201 Created\nContent-Type: application/json\n\n{\n   \"sourceType\": \"INLINE\",\n   \"sourceUrl\": null,\n   \"otherTypeName\": null,\n   \"documentId\": \"ffd5790d-b7a9-4cb6-b76a-f8b83ecdd058\",\n   \"summary\": \"This is a sample documentation\",\n   \"name\": \"Introduction to PhoneVerification API\",\n   \"type\": \"HOWTO\"\n}",
                "summary": "Add a new document",
                "description": "Add a new document to an API\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Document object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    }
                ],
                "tags": [
                    "App Documents"
                ],
                "responses": {
                    "201": {
                        "description": "Created.\nSuccessful response with the newly created document object as the entity in the body.\nLocation header contains the URL of the newly added document.\n",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        },
                        "headers": {
                            "Location": {
                                "description": "Location to the newly created document.\n",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "415": {
                        "description": "Unsupported media type.\nThe entity of the request was in an unsupported format.\n"
                    }
                }
            }
        },
        "/apps/{appType}/id/{appId}/docs/{documentId}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 4fc0a364a336a37c663790364da307a3\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/a7a7dacc-8a1c-428e-930d-d181f60f14bd/docs/6d47f5d5-f046-47e9-a65d-6eb50d5cd05e\"",
                "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n  \"sourceType\": \"INLINE\",\n   \"sourceUrl\": null,\n   \"otherTypeName\": null,\n   \"documentId\": \"0bcb7f05-599d-4e1a-adce-5cb89bfe58d5\",\n   \"summary\": \"This is a sample documentation\",\n   \"name\": \"PhoneVerification Documentation\",\n   \"type\": \"HOWTO\"\n}",
                "summary": "Retrieving document",
                "description": "Retrieving the document.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/documentId"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "App Documents"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nDocument retrieved successfully.\n",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the changed App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the resource was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nRequested entity does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -H \"Authorization: Bearer 4fc0a364a336a37c663790364da307a3\" -X DELETE \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/0950b09c-0afe-47f2-88d6-72e9b88b1931/docs/8150c757-ba7f-4751-8020-71d7ee3e5d76\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Delete Document",
                "description": "Delete an existing document.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/documentId"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nResource successfully deleted.\n"
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nResource to be deleted does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -k -H \"Authorization:Bearer b0982cd2aacd463ff5f63cd5ebe58f4a\" -H \"Content-Type: application/json\" -X PUT -d data.json \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/id/a7a7dacc-8a1c-428e-930d-d181f60f14bd/docs/4cbbafc6-2327-49fc-9c3f-34ea36599091\"",
                "x-wso2-request": "{\n   \"sourceType\": \"INLINE\",\n   \"sourceUrl\": null,\n   \"otherTypeName\": null,\n   \"documentId\": \"0bcb7f05-599d-4e1a-adce-5cb89bfe58d5\",\n   \"summary\": \"This is a sample documentation for v1.0.0\",\n   \"name\": \"PhoneVerification Documentation\",\n   \"type\": \"HOWTO\"\n}",
                "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n\n{\n   \"visibility\": \"API_LEVEL\",\n   \"sourceType\": \"INLINE\",\n   \"sourceUrl\": null,\n   \"otherTypeName\": null,\n   \"documentId\": \"0bcb7f05-599d-4e1a-adce-5cb89bfe58d5\",\n   \"summary\": \"This is a sample documentation for v1.0.0\",\n   \"name\": \"PhoneVerification Documentation\",\n   \"type\": \"HOWTO\"\n}",
                "summary": "Update an Webapp Document",
                "description": "Update document details.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appId"
                    },
                    {
                        "$ref": "#/parameters/documentId"
                    },
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Document object that needs to be added\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Document"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "App Document"
                ],
                "responses": {
                    "200": {
                        "description": "OK. \nDocument updated\n",
                        "schema": {
                            "$ref": "#/definitions/Document"
                        },
                        "headers": {
                            "Location": {
                                "description": "The URL of the updated document.\n",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. \nUsed by caches, or in conditional request.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time the resource has been modifed the last time. \nUsed by caches, or in conditional reuquests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request. \nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found. \nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed. \nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/change-lifecycle": {
            "post": {
                "summary": "Change App Status",
                "x-scope": "appm:publish",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer 31b72e5a9158a413187532b052953f68\" -H \"Content-Type: application/json\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/mobileapp/change-lifecycle?appId=d88b826c-e560-499e-900d-eb24679b2fbf&action=Unpublish\"",
                "x-wso2-response": "HTTP/1.1 202 OK\nContent-Type: application/json\n {\"message\": \"Lifecycle action : Recycle has been accepted for processing \"}",
                "description": "Change the lifecycle of an App.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "name": "action",
                        "description": "The action determining whether to demote or promote the state of the App.\n\n\n\n\nSupported actions are [**Publish, Approve, Reject, Unpublish, Deprecate, Retire, Recycle, Re-Publish, Submit for Review**]\n",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "enum": [
                            "Publish",
                            "Approve",
                            "Reject",
                            "Unpublish",
                            "Deprecate",
                            "Retire",
                            "Recycle",
                            "Re-Publish",
                            "Submit#for#Review"
                        ]
                    },
                    {
                        "$ref": "#/parameters/appId-Q"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "202": {
                        "schema": {
                            "$ref": "#/definitions/ResponseMessage"
                        },
                        "description": "OK.\nLifecycle changed successfully.\n",
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the App lifecycle was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nRequested App does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/validate-context": {
            "post": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer f61b3bea0fdc1d31d464a40f7aec8282\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/validate-context?appContext=travelApp\"",
                "x-wso2-response": "HTTP/1.1 200 OK\nContent-Type: application/json\n{\"IsContextExists\":true}",
                "summary": "Validate App Context",
                "description": "Validate App context.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appContext"
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "App"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n"
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.\nThe entity of the request was in an unsupported format.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/stats/{statType}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer ede4387e36fbf87c802026f1240b7e5d\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/stats/getAppUsagePerPage\"",
                "x-wso2-response": "{\"result\": [{\"apiName\": \"TravelBooking_admin(v1.0.0)\",\"referer\": \"/travel/1.0.0/booking-step2.jsp\",\"userId\": \"subscriber_admin\",\"version\": \"1.0.0\",\"count\": 15,\"context\": \"/travel\"},{\"apiName\": \"TravelBooking_admin(v1.0.0)\",\"referer\": \"/travel/1.0.0/booking-step1.jsp\",\"userId\": \"subscriber_admin\",\"version\": \"1.0.0\",\"count\": 20,\"context\": \"/travel\"},{\"apiName\": \"PlanYourTrip_admin(v1.0.0)\",\"referer\": \"/planYourTrip/1.0.0\",\"userId\": \"subscriber_admin\",\"version\": \"1.0.0\", \"count\": 10, \"context\": \"/planYourTrip\"}]}",
                "summary": "Get stat summary",
                "description": "Get stat summary results.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/statType"
                    },
                    {
                        "name": "startTimeStamp",
                        "description": "The start date and time of the stat analysis in the following format: 2016-04-19 10:32:00",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "endTimeStamp",
                        "description": "The end date and time of the stat analysis in the following format: 2016-04-19 10:32:00",
                        "in": "query",
                        "type": "string",
                        "required": false
                    },
                    {
                        "name": "limit",
                        "description": "The limit of the number of records.",
                        "in": "query",
                        "type": "integer",
                        "required": false
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Stats"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n",
                        "schema": {
                            "$ref": "#/definitions/StatSummary"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/tags": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 0c0338592beefe7225bd6d869e93ca06\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/webapp/tags\"",
                "x-wso2-response": "[{\"name\":\"webapptag1\",\"noOfOccurrences\":1},{\"name\":\"webapptag2\",\"noOfOccurrences\":1},{\"name\":\"webapptag3\",\"noOfOccurrences\":1}]",
                "summary": "Get all Tags",
                "description": "Get a list of available tags relevant to the given App type.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Tags"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of tags is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/TagList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/{appType}/name/{appName}/version/{version}/uuid": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "",
                "x-wso2-response": "",
                "summary": "Get app UUID",
                "description": "Get app UUId by name and version \n",
                "parameters": [
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/appName"
                    },
                    {
                        "$ref": "#/parameters/version"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nApp uuid is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/AppDTO"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/mobile/binaries": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer 31b72e5a9158a413187532b052953f68\" -H \"Content-Type: multipart/form-data\" -F \"file=@/home/user/sample.apk\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/mobile/binaries\"",
                "x-wso2-response": "{\"version\": \"1.0\",\"package\": \"home.jmstudios.calc\",\"path\": \"O0lsxdlhR998Hhc.apk\"}",
                "summary": "Uploading binary files",
                "description": "Uploading .apk/.IPA binary files.\n",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "description": "Document to be uploaded.",
                        "type": "file",
                        "required": false
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "MobileApps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nBinary file uploaded successfully.\n",
                        "schema": {
                            "$ref": "#/definitions/Binary"
                        },
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the changed App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the resource was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nRequested App does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/mobile/binaries/{fileName}": {
            "get": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 0763d28a85f20d6fd8954f955859055c\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/mobile/binaries/O0lsxdlhR998Hhc.apk\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Retrieving mobile application binaries",
                "description": "Retrieving .apk and .ipa binaries for mobile apps.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/fileName"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "MobileApps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nMobile app binary content retrieved successfully.\n",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the changed App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the resource was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nRequested entity does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/mobile/getplist/tenant/{tenantId}/file/{fileName}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "",
                "x-wso2-response": "",
                "summary": "Get Plist",
                "description": "Get the plist file of the specified iOS (Apple) mobile app.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/tenantId"
                    },
                    {
                        "$ref": "#/parameters/fileName"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n",
                        "schema": {
                            "$ref": "#/definitions/PList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/static-contents": {
            "post": {
                "consumes": [
                    "multipart/form-data"
                ],
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer 0763d28a85f20d6fd8954f955859055c\" -H \"Content-Type: multipart/form-data\" -F \"file=@/home/user/sample.jpg\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/static-contents?appType=webapp\"",
                "x-wso2-response": "{\"id\": \"ZQCIsEEkYM2LJ9C.jpg\"}",
                "summary": "Uploading images, pdf and document files",
                "description": "Uploading images for banners, screenshots etc.\n",
                "parameters": [
                    {
                        "in": "formData",
                        "name": "file",
                        "description": "Document to be uploaded.",
                        "type": "file",
                        "required": false
                    },
                    {
                        "name": "appType",
                        "description": "The application type.",
                        "in": "query",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nStatic content uploaded successfully.\n",
                        "schema": {
                            "$ref": "#/definitions/StaticContent"
                        },
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the changed App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the resource was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nRequested entity does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/apps/static-contents/{fileName}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer c7fff7b0307472345c8652d6595b1b1c\" \"http://localhost:9763/api/appm/publisher/v1.1/apps/static-contents/ZQCIsEEkYM2LJ9C.jpg?appType=mobileapp\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Retrieving images, pdf and documents files",
                "description": "Retrieving images for banners, screenshots, etc.\n",
                "parameters": [
                    {
                        "name": "appType",
                        "description": "The application type.",
                        "in": "query",
                        "type": "string",
                        "required": true
                    },
                    {
                        "$ref": "#/parameters/fileName"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nStatic content retrieved successfully.\n",
                        "schema": {
                            "type": "file"
                        },
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the changed App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the resource was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nRequested entity does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/xacmlpolicies/": {
            "get": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer e819870696cc39494d12841b5094a411\" \"http://localhost:9763/api/appm/publisher/v1.1/xacmlpolicies\"",
                "x-wso2-response": "{\"policyPartial\": \"<Rule Effect=\"Permit\" RuleId=\"Rule001\"><Condition>\n      <Apply FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:any-of\">\n         <Function FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:string-equal\"/>\n         <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">admin</AttributeValue>\n         <AttributeDesignator AttributeId=\"http://wso2.org/claims/role\" Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\" DataType=\"http://www.w3.org/2001/XMLSchema#string\" MustBePresent=\"true\"/>\n      </Apply>\n</Condition>\n</Rule>\",\"policyPartialName\": policy1,\"isSharedPartial\": true,\"policyPartialDesc\": null,,\"policyPartialId\": 1}",
                "summary": "Get all XACML policies",
                "description": "Get a list of XACML policies.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "XACMLPolicies"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of XACML policies is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/PolicyPartialList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/xacmlpolicies/{policyPartialId}/apps/{appType}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 04b1607a56c2d51adb35912943335322\" -H \"Content-Type: application\/json\" \"http:\/\/localhost:9763\/api\/appm\/publisher\/v1.1\/xacmlpolicies\/2\/apps\/webapp\"",
                "x-wso2-response": "{\"previous\":\"\",\"next\":\"\",\"count\":2,\"appList\":[{\"name\":\"app1\",\"context\":null,\"id\":\"af929140-1257-46ed-97c0-d26098e140e9\",\"rating\":0.0,\"lifecycleState\":\"IN-REVIEW\",\"provider\":\"admin\",\"description\":\"asdasd\",\"version\":\"1\"},{\"name\":\"app2\",\"context\":null,\"id\":\"5c9c8551-d696-4c44-85a6-dcd86f1a1e25\",\"rating\":0.0,\"lifecycleState\":\"CREATED\",\"provider\":\"admin\",\"description\":\"phone\",\"version\":\"1.0\"}]}",
                "summary": "Get all Apps mapped to a policy partial",
                "description": "Get a list of available Apps mapped to a policy partial.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/policyPartialId"
                    },
                    {
                        "$ref": "#/parameters/appType"
                    },
                    {
                        "$ref": "#/parameters/limit"
                    },
                    {
                        "$ref": "#/parameters/offset"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of qualifying Apps is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/AppList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/administration/xacmlpolicies/validate": {
            "post": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer 04b1607a56c2d51adb35912943335322\" -H \"Content-Type: application\/json\"  -d '{ \"policyPartial\": \"<Condition>\\n      <Apply FunctionId=\\\"urn:oasis:names:tc:xacml:1.0:function:any-of\\\">\\n         <Function FunctionId=\\\"urn:oasis:names:tc:xacml:1.0:function:string-equal\\\"\/>\\n         <AttributeValue DataType=\\\"http:\/\/www.w3.org\/2001\/XMLSchema#string\\\">admin<\/AttributeValue>\\n         <AttributeDesignator AttributeId=\\\"http:\/\/wso2.org\/claims\/role\\\" Category=\\\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\\\" DataType=\\\"http:\/\/www.w3.org\/2001\/XMLSchema#string\\\" MustBePresent=\\\"true\\\"\/>\\n      <\/Apply>\\n<\/Condition>\"}' \"http:\/\/localhost:9763\/api\/appm\/publisher\/v1.1\/administration\/xacmlpolicies\/validate\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "x-wso2-request": "{\"policyPartial\": \"<Rule Effect=\"Permit\" RuleId=\"Rule001\"><Condition>\n      <Apply FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:any-of\">\n         <Function FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:string-equal\"/>\n         <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">admin</AttributeValue>\n         <AttributeDesignator AttributeId=\"http://wso2.org/claims/role\" Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\" DataType=\"http://www.w3.org/2001/XMLSchema#string\" MustBePresent=\"true\"/>\n      </Apply>\n</Condition></Rule>\"}",
                "summary": "Validate policy content",
                "description": "Validates the content of the policy.\n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Policy Partial object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PolicyPartial"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "XACMLPolicies"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n"
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.\nThe entity of the request was in an unsupported format.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/administration/xacmlpolicies/": {
            "post": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer 28bc70efa75175336e177d88e148c46d\" -H \"Content-Type: application\/json\" -H \"Cache-Control: no-cache\" -H \"Postman-Token: 02ec508b-85ef-c4fa-5cb3-e5b4ab440948\" -d '{\"isSharedPartial\":true,\"policyPartialDesc\":\"asdasdasdadsad\",\"policyPartial\":\"<Rule Effect=\\\"Permit\\\" RuleId=\\\"Rule001\\\"><Condition>\\n      <Apply FunctionId=\\\"urn:oasis:names:tc:xacml:1.0:function:any-of\\\">\\n         <Function FunctionId=\\\"urn:oasis:names:tc:xacml:1.0:function:string-equal\\\"\/>\\n         <AttributeValue DataType=\\\"http:\/\/www.w3.org\/2001\/XMLSchema#string\\\">admin<\/AttributeValue>\\n         <AttributeDesignator AttributeId=\\\"http:\/\/wso2.org\/claims\/role\\\" Category=\\\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\\\" DataType=\\\"http:\/\/www.w3.org\/2001\/XMLSchema#string\\\" MustBePresent=\\\"true\\\"\/>\\n      <\/Apply>\\n<\/Condition>\\n<\/Rule>\",\"policyPartialName\":\"asdasd\",\"policyPartialId\":1}' \"http:\/\/localhost:9763\/api\/appm\/publisher\/v1.1\/administration\/xacmlpolicies\/\"\r\n",
                "x-wso2-response": "{\"policyPartial\": \"<Rule Effect=\"Permit\" RuleId=\"Rule001\"><Condition>\n      <Apply FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:any-of\">\n         <Function FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:string-equal\"/>\n         <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">admin</AttributeValue>\n         <AttributeDesignator AttributeId=\"http://wso2.org/claims/role\" Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\" DataType=\"http://www.w3.org/2001/XMLSchema#string\" MustBePresent=\"true\"/>\n      </Apply>\n</Condition>\n</Rule>\",\"policyPartialName\": \"ddd\",\"isSharedPartial\": true,\"policyPartialDesc\": null,\"policyPartialIc\": 2}",
                "x-wso2-request": "{\"policyPartial\": \"<Rule Effect=\"Permit\" RuleId=\"Rule001\"><Condition>\n      <Apply FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:any-of\">\n         <Function FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:string-equal\"/>\n         <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">admin</AttributeValue>\n         <AttributeDesignator AttributeId=\"http://wso2.org/claims/role\" Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\" DataType=\"http://www.w3.org/2001/XMLSchema#string\" MustBePresent=\"true\"/>\n      </Apply>\n</Condition>\n</Rule>\",\"policyPartialName\": \"ddd\",\"isSharedPartial\": true,\"policyPartialDesc\": null}",
                "summary": "Create a new Policy Partial",
                "description": "Create a new Policy Partial.\n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Policy Partial object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PolicyPartial"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "XACMLPolicies"
                ],
                "responses": {
                    "201": {
                        "description": "Created.\nSuccessful response with the newly created object as the entity in the body.\nLocation header contains the URL of the newly created entity.\n",
                        "schema": {
                            "$ref": "#/definitions/PolicyPartial"
                        },
                        "headers": {
                            "Location": {
                                "description": "The URL of the newly created resource.\n",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.\nThe entity of the request was in an unsupported format.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/administration/xacmlpolicies/{policyPartialId}": {
            "put": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X PUT -H \"Authorization: Bearer 28bc70efa75175336e177d88e148c46d\" -H \"Content-Type: application\/json\" -H \"Cache-Control: no-cache\" -H \"Postman-Token: 02ec508b-85ef-c4fa-5cb3-e5b4ab440948\" -d '{\"isSharedPartial\":true,\"policyPartialDesc\":\"asdasdasdadsad\",\"policyPartial\":\"<Rule Effect=\\\"Permit\\\" RuleId=\\\"Rule001\\\"><Condition>\\n      <Apply FunctionId=\\\"urn:oasis:names:tc:xacml:1.0:function:any-of\\\">\\n         <Function FunctionId=\\\"urn:oasis:names:tc:xacml:1.0:function:string-equal\\\"\/>\\n         <AttributeValue DataType=\\\"http:\/\/www.w3.org\/2001\/XMLSchema#string\\\">admin<\/AttributeValue>\\n         <AttributeDesignator AttributeId=\\\"http:\/\/wso2.org\/claims\/role\\\" Category=\\\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\\\" DataType=\\\"http:\/\/www.w3.org\/2001\/XMLSchema#string\\\" MustBePresent=\\\"true\\\"\/>\\n      <\/Apply>\\n<\/Condition>\\n<\/Rule>\",\"policyPartialName\":\"asdasd\",\"policyPartialId\":1}' \"http:\/\/localhost:9763\/api\/appm\/publisher\/v1.1\/administration\/xacmlpolicies\/1\"\r\n",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "x-wso2-request": "{\"policyPartial\": \"<Rule Effect=\"Permit\" RuleId=\"Rule001\"><Condition>\n      <Apply FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:any-of\">\n         <Function FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:string-equal\"/>\n         <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">admin</AttributeValue>\n         <AttributeDesignator AttributeId=\"http://wso2.org/claims/role\" Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\" DataType=\"http://www.w3.org/2001/XMLSchema#string\" MustBePresent=\"true\"/>\n      </Apply>\n</Condition>\n</Rule>\",\"policyPartialName\": \"ddd\",\"isSharedPartial\": true,\"policyPartialDesc\": null}",
                "summary": "Update an existing policy partial",
                "description": "Update an existing policy partial\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/policyPartialId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "App object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PolicyPartial"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "XACMLPolicies"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n",
                        "headers": {
                            "ETag": {
                                "description": "Entity Tag of the App. Used by caches or in conditional requests.\n",
                                "type": "string"
                            },
                            "Last-Modified": {
                                "description": "Date and time at which the App lifecycle was last modified.\nUsed by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "get": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 5e3e12917945881407eaad1868ea4629\" \"http://localhost:9763/api/appm/publisher/v1.1/administration/xacmlpolicies/40\"",
                "x-wso2-response": "{\"policyPartial\": \"<Rule Effect=\"Permit\" RuleId=\"Rule001\"><Condition>\n      <Apply FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:any-of\">\n         <Function FunctionId=\"urn:oasis:names:tc:xacml:1.0:function:string-equal\"/>\n         <AttributeValue DataType=\"http://www.w3.org/2001/XMLSchema#string\">admin</AttributeValue>\n         <AttributeDesignator AttributeId=\"http://wso2.org/claims/role\" Category=\"urn:oasis:names:tc:xacml:1.0:subject-category:access-subject\" DataType=\"http://www.w3.org/2001/XMLSchema#string\" MustBePresent=\"true\"/>\n      </Apply>\n</Condition>\n</Rule>\",\"policyPartialName\": \"ddd\",\"isSharedPartial\": true,\"policyPartialDesc\": null,\"policyPartialIc\": 2}",
                "summary": "Get policy partial details",
                "description": "Get policy partial.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/policyPartialId"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "XACMLPolicies"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nQualifying App is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/PolicyPartial"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X DELETE -H \"Authorization: Bearer 5e3e12917945881407eaad1868ea4629\"   -d '' \"http://localhost:9763/api/appm/publisher/v1.1/administration/xacmlpolicies/40\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Delete policy partial",
                "description": "Delete an existing policy partial\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/policyPartialId"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Apps"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nResource successfully deleted.\n"
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nResource to be deleted does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/administration/businessowner": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 68f8872882b2dca493328564942251b6\" \"http://localhost:9763/api/appm/publisher/v1.1/administration/businessowner\"",
                "x-wso2-response": "{\"businessOwnerList\": [{\"site\": \"test.lk\",\"email\": \"testOwner@gmail.com\",\"description\": \"this is a test description\",\"name\": \"testOwner\",\"properties\": [{\"isVisible\": false,\"value\": \"903334238V\",\"key\": \"nic\"}],\"id\": 1}]}",
                "summary": "Get all Business owners",
                "description": "Get a list of available Apps qualifying under a given search condition.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Business-Owner"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of qualifying business owners is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/BusinessOwnerList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "post": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X POST -H \"Authorization: Bearer 56bbab397e7baa757e6e5847e789727d\" -H \"Host: 127.0.0.1:9763\" -H \"Content-Type:application/json\" -d '{\"site\": \"testUser.lk\",\"email\": \"testUser@gmail.com\",\"description\": \"this is a test description\",\"name\":\"testUser\",\"properties\": [{\"isVisible\": true,\"value\": \"0112345678\",\"key\": \"telephone\"}]}' \"http://localhost:9763/api/appm/publisher/v1.1/administration/businessowner\"",
                "x-wso2-response": "{\"id\": 4}",
                "x-wso2-request": "{\"site\": \"testUser.lk\",\"email\": \"testUser@gmail.com\",\"description\": \"this is a test description\",\"name\":\"testUser\",\"properties\": [{\"isVisible\": true,\"value\": \"0112345678\",\"key\": \"telephone\"}]}",
                "summary": "Create a new Business Owner",
                "description": "Create a new business owner.\n",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Business Owner object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BusinessOwner"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "Business-Owner"
                ],
                "responses": {
                    "201": {
                        "description": "Created.\nSuccessful response with the newly created object as the entity in the body.\nLocation header contains the URL of the newly created entity.\n",
                        "schema": {
                            "$ref": "#/definitions/BusinessOwner"
                        },
                        "headers": {
                            "Location": {
                                "description": "The URL of the newly created resource.\n",
                                "type": "string"
                            },
                            "Content-Type": {
                                "description": "The content type of the body.\n",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional request\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "415": {
                        "description": "Unsupported Media Type.\nThe entity of the request was in a not supported format.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/administration/businessowner/{businessOwnerId}": {
            "get": {
                "x-scope": "appm:read",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 68f8872882b2dca493328564942251b6\" \"http://localhost:9763/api/appm/publisher/v1.1/administration/businessowner/1\"",
                "x-wso2-response": "{\"site\": \"test.lk\",\"email\": \"testOwner@gmail.com\",\"description\": \"this is a test description\",\"name\": \"testOwner\",\"properties\": [{\"isVisible\": false,\"value\": \"903334238V\",\"key\": \"nic\"}],\"id\": 1}",
                "summary": "Get business owners by ID",
                "description": "Get business owners by ID.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/businessOwnerId"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Business-Owner"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n",
                        "schema": {
                            "$ref": "#/definitions/BusinessOwner"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X PUT -H \"Authorization: Bearer 68f8872882b2dca493328564942251b6\" -H \"Content-Type: application/json\" -d '{\"site\": \"sysUser.lk\",\"email\": \"sysUser@gmail.com\",\"description\": \"this is a test description\",\"name\": \"sysUser\",\"properties\": [{\"isVisible\": true,\"value\": \"0112345678\",\"key\": \"telephone\"}],\"id\": 1}' \"http://localhost:9763/api/appm/publisher/v1.1/administration/businessowner/1\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "x-wso2-request": "{\"site\": \"newSysUser.lk\",\"email\": \"newSysUser@gmail.com\",\"description\":\"this is a test description\",\"name\": \"sysUser\",\"properties\": [{\"isVisible\": true,\"value\": \"0112345678\",\"key\": \"telephone\"}]}",
                "summary": "Update an existing business owner",
                "description": "Update an existing business owner.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/businessOwnerId"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Business Owner object that needs to be added.\n",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BusinessOwner"
                        }
                    },
                    {
                        "$ref": "#/parameters/Content-Type"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Business-Owner"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\n"
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "delete": {
                "x-scope": "appm:administration",
                "x-wso2-curl": "curl -X DELETE -H \"Authorization: Bearer 68f8872882b2dca493328564942251b6\" \"http://localhost:9763/api/appm/publisher/v1.1/administration/businessowner/3\"",
                "x-wso2-response": "HTTP/1.1 200 OK",
                "summary": "Delete Business Owner",
                "description": "Delete an existing business owner.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/businessOwnerId"
                    },
                    {
                        "$ref": "#/parameters/If-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Unmodified-Since"
                    }
                ],
                "tags": [
                    "Business-Owner"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nResource successfully deleted.\n"
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nResource to be deleted does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "412": {
                        "description": "Precondition Failed.\nThe request has not been performed because one of the preconditions is not met.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/roles": {
            "get": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 303c73b076f1aeeb16ebee6b96bd250e\" \"http://localhost:9763/api/appm/publisher/v1.1/roles\"",
                "x-wso2-response": "{\"roleIds\": [\"admin\",\"Application/app_11_04_001\", \"Application/app_11_04_002\",\"Application/app_11_04_011\"]}",
                "summary": "Get all Roles",
                "description": "Get a list of available roles.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    }
                ],
                "tags": [
                    "Roles"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nList of roles is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/RoleIdList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        },
        "/javapolicies": {
            "get": {
                "x-scope": "appm:create",
                "x-wso2-curl": "curl -X GET -H \"Authorization: Bearer 303c73b076f1aeeb16ebee6b96bd250e\" \"http://localhost:9763/api/appm/publisher/v1.1/javapolicies\"",
                "x-wso2-response": "{\"policyList\": [{\"id\": 5,\"displayName\": \"Publish Statistics:\",\"displayOrder\": 5,\"description\": \"\"}]}",
                "summary": "Get available java policies",
                "description": "Get available java policies.\n",
                "parameters": [
                    {
                        "$ref": "#/parameters/isGlobal"
                    },
                    {
                        "$ref": "#/parameters/Accept"
                    },
                    {
                        "$ref": "#/parameters/If-None-Match"
                    },
                    {
                        "$ref": "#/parameters/If-Modified-Since"
                    }
                ],
                "tags": [
                    "JavaPolicies"
                ],
                "responses": {
                    "200": {
                        "description": "OK.\nQualifying App is returned.\n",
                        "schema": {
                            "$ref": "#/definitions/JavaPolicyList"
                        },
                        "headers": {
                            "Content-Type": {
                                "description": "The content type of the body.",
                                "type": "string"
                            },
                            "ETag": {
                                "description": "Entity Tag of the response resource. Used by caches or in conditional requests.\n",
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.\nInvalid request or validation error.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden.\nThe request must be conditional but no condition has been specified.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found.\nThe resource to be updated does not exist.\n",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            }
        }
    },
    "parameters": {
        "appId": {
            "name": "appId",
            "in": "path",
            "description": "**APP ID** consisting of the **UUID** of the App.\nThe following combination is also accepted as a valid APP ID: the provider of the app, name of the app and the version.\nShould be formatted as **provider-name-version**.\n",
            "required": true,
            "type": "string"
        },
        "appType": {
            "name": "appType",
            "in": "path",
            "description": "The App type (either Webapp/Mobile app).\n",
            "required": true,
            "type": "string"
        },
        "policyPartialId": {
            "name": "policyPartialId",
            "in": "path",
            "description": "Policy partial ID\n",
            "required": true,
            "type": "integer"
        },
        "appId-Q": {
            "name": "appId",
            "in": "query",
            "description": "**APP ID** consisting of the **UUID** of the App.\nThe following combination is also accepted as a valid App ID: the provider of the app, name of the app and the version.\nShould be formatted as **provider-name-version**.\n",
            "required": true,
            "type": "string"
        },
        "appContext": {
            "name": "appContext",
            "in": "query",
            "description": "Application context.",
            "required": true,
            "type": "string"
        },
        "isGlobal": {
            "name": "isGlobal",
            "in": "query",
            "description": "Determines whether or not the policy is global. The default value is 'true'.",
            "required": false,
            "default": true,
            "type": "boolean"
        },
        "fieldFilter": {
            "name": "field-filter",
            "description": "Used to limit the fields in the response.\n\n\n\n\nSupported filters are [ **basic, all**]\n",
            "in": "query",
            "type": "string",
            "required": false,
            "default": "basic",
            "enum": [
                "basic",
                "all"
            ]
        },
        "limit": {
            "name": "limit",
            "in": "query",
            "description": "Maximum size of resource array to return.\n",
            "default": 25,
            "type": "integer"
        },
        "offset": {
            "name": "offset",
            "in": "query",
            "description": "Starting point within the complete list of items qualified.\n",
            "default": 0,
            "type": "integer"
        },
        "fileName": {
            "name": "fileName",
            "in": "path",
            "description": "The file name.\n",
            "required": true,
            "type": "string"
        },
        "documentId": {
            "name": "documentId",
            "in": "path",
            "description": "Document UUID.\n",
            "required": true,
            "type": "string"
        },
        "tenantId": {
            "name": "tenantId",
            "in": "path",
            "description": "Tenant ID.\n",
            "required": true,
            "type": "string"
        },
        "statType": {
            "name": "statType",
            "in": "path",
            "description": "The stat type.\n\n\n\n\nSupported stat types are [**getAppUsagePerPage, getSubscriptionCountsPerApp, getSubscriptionsPerApp, getAppUsagePerUser, getAppResponseTime, getCacheHit**]\n",
            "required": true,
            "type": "string",
            "enum": [
                "getAppUsagePerPage",
                "getSubscriptionCountsPerApp",
                "getSubscriptionsPerApp",
                "getAppUsagePerUser",
                "getAppResponseTime",
                "getCacheHit"
            ]
        },
        "businessOwnerId": {
            "name": "businessOwnerId",
            "in": "path",
            "description": "Business owner ID.\n",
            "required": true,
            "type": "integer"
        },
        "appName": {
            "name": "appName",
            "in": "path",
            "description": "The App appName.\n",
            "required": true,
            "type": "string"
        },
        "version": {
            "name": "version",
            "in": "path",
            "description": "The App version.\n",
            "required": true,
            "type": "string"
        },
        "Accept": {
            "name": "Accept",
            "in": "header",
            "description": "Media types acceptable for the response. Default is JSON.\n",
            "default": "JSON",
            "type": "string"
        },
        "Content-Type": {
            "name": "Content-Type",
            "in": "header",
            "description": "Media type of the entity in the body. Default is JSON.\n",
            "default": "JSON",
            "required": true,
            "type": "string"
        },
        "If-None-Match": {
            "name": "If-None-Match",
            "in": "header",
            "description": "Validator for conditional requests; based on the ETag of the formerly retrieved\nvariant of the resource.\n",
            "type": "string"
        },
        "If-Modified-Since": {
            "name": "If-Modified-Since",
            "in": "header",
            "description": "Validator for conditional requests; based on the Last Modified header of the\nformerly retrieved variant of the resource.\n",
            "type": "string"
        },
        "If-Match": {
            "name": "If-Match",
            "in": "header",
            "description": "Validator for conditional requests; based on the ETag.\n",
            "type": "string"
        },
        "If-Unmodified-Since": {
            "name": "If-Unmodified-Since",
            "in": "header",
            "description": "Validator for conditional requests; based on the Last Modified header.\n",
            "type": "string"
        }
    },
    "definitions": {
        "AppList": {
            "title": "App List",
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Number of App returned.\n",
                    "example": 1
                },
                "next": {
                    "type": "string",
                    "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n",
                    "example": "/app?limit=1&offset=2&query="
                },
                "previous": {
                    "type": "string",
                    "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n",
                    "example": "/app?limit=1&offset=0&query="
                },
                "appList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/App"
                    }
                },
                "appSummaryList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AppSummary"
                    }
                }
            }
        },
        "AppSummary": {
            "title": "App summary object with basic App details.",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "01234567-0123-0123-0123-012345678901"
                },
                "name": {
                    "type": "string",
                    "example": "CalculatorApp"
                },
                "description": {
                    "type": "string",
                    "example": "A calculator App that supports basic operations"
                },
                "context": {
                    "type": "string",
                    "example": "CalculatorApp"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                },
                "provider": {
                    "description": "If the provider value is not given, the user invoking the App will be used as the provider.\n",
                    "type": "string",
                    "example": "admin"
                },
                "lifecycleState": {
                    "type": "string",
                    "example": "CREATED"
                },
                "rating": {
                    "description": "User rating for the app\n",
                    "type": "number",
                    "example": 4
                }
            }
        },
        "App": {
            "title": "App object",
            "required": [
                "name",
                "version",
                "displayName"
            ],
            "properties": {
                "id": {
                    "type": "string",
                    "description": "UUID of the app registry artifact\n",
                    "example": "01234567-0123-0123-0123-012345678901"
                },
                "name": {
                    "type": "string",
                    "example": "CalculatorApp"
                },
                "type": {
                    "type": "string",
                    "description": "The App type (either Webapp/Mobile app)",
                    "example": "webapp,mobileapp"
                },
                "appmeta": {
                    "type": "object",
                    "properties": {
                        "path": {
                            "type": "string",
                            "description": "Application binary file API\n",
                            "example": "/publisher/api/mobileapp/getfile/XURc4DnX0LEfRBm.apk,/publisher/api/mobileapp/getfile/OUGc8DnX0LEGRBm.ipa"
                        },
                        "package": {
                            "type": "string",
                            "description": "The package name of the application binary\n",
                            "example": "home.jmstudios.calc"
                        },
                        "version": {
                            "type": "string",
                            "description": "The version of the application binary\n",
                            "example": "1.0"
                        },
                        "weburl": {
                            "type": "string",
                            "description": "Web application urk\n",
                            "example": "http://sample.com"
                        }
                    }
                },
                "uriTemplates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UriTemplate"
                    }
                },
                "policyGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyGroups"
                    }
                },
                "marketType": {
                    "type": "string",
                    "example": "enterprise,"
                },
                "recentChanges": {
                    "description": "recent changes",
                    "type": "string",
                    "example": "update details"
                },
                "icon": {
                    "description": "the image icon of the application\n",
                    "type": "string",
                    "example": "/publisher/api/mobileapp/getfile/TJXfaEeHsdeYSFS.jpg,/publisher/api/mobileapp/getfile/aCJ1MXUXWGGHS3t.JPG"
                },
                "isSite": {
                    "type": "string",
                    "description": "Either a webapp or site",
                    "example": "for sites - TRUE"
                },
                "description": {
                    "type": "string",
                    "example": "A calculator App that supports basic operations"
                },
                "context": {
                    "type": "string",
                    "example": "CalculatorApp"
                },
                "version": {
                    "type": "string",
                    "example": "1.0.0"
                },
                "logoutURL": {
                    "type": "string",
                    "example": "http://logout/sample"
                },
                "businessOwnerId": {
                    "type": "string",
                    "example": "1"
                },
                "visibleTenants": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "eng.com",
                        "hr.com"
                    ]
                },
                "claims": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "http://wso2.org/claims/otherphone",
                        "http://wso2.org/claims/address"
                    ]
                },
                "trackingCode": {
                    "type": "string",
                    "example": "AM_e82dggfde7877"
                },
                "skipGateway": {
                    "type": "string",
                    "example": "true/false"
                },
                "serviceProviderCreationEnabled": {
                    "type": "boolean",
                    "example": "true/false"
                },
                "allowAnonymousAccess": {
                    "type": "string",
                    "example": "true/false"
                },
                "acsUrl": {
                    "type": "string",
                    "example": "http://apps.wso2.com"
                },
                "provider": {
                    "description": "If the provider value is not given user invoking the api will be used as the provider.\n",
                    "type": "string",
                    "example": "admin"
                },
                "appDefinition": {
                    "description": "Swagger definition of the App which contains details about URI templates and scopes\n",
                    "type": "string",
                    "example": "{\"paths\":{\"\\/substract\":{\"get\":{\"x-auth-type\":\"Application & Application User\",\"x-throttling-tier\":\"Unlimited\",\"parameters\":[{\"name\":\"x\",\"required\":true,\"type\":\"string\",\"in\":\"query\"},{\"name\":\"y\",\"required\":true,\"type\":\"string\",\"in\":\"query\"}],\"responses\":{\"200\":{}}}},\"\\/add\":{\"get\":{\"x-auth-type\":\"Application & Application User\",\"x-throttling-tier\":\"Unlimited\",\"parameters\":[{\"name\":\"x\",\"required\":true,\"type\":\"string\",\"in\":\"query\"},{\"name\":\"y\",\"required\":true,\"type\":\"string\",\"in\":\"query\"}],\"responses\":{\"200\":{}}}}},\"swagger\":\"2.0\",\"info\":{\"title\":\"CalculatorApp\",\"version\":\"1.0.0\"}}"
                },
                "isDefaultVersion": {
                    "type": "boolean",
                    "example": false
                },
                "transport": {
                    "description": "Supported transports for the App (http and/or https).\n",
                    "type": "string",
                    "example": "https"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "substract",
                        "add"
                    ]
                },
                "thumbnailUrl": {
                    "type": "string",
                    "example": ""
                },
                "visibleRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": []
                },
                "path": {
                    "description": "path of asset",
                    "type": "string",
                    "example": "/_system/governance/mobileapps/admin/webapp/m1/1"
                },
                "resourceId": {
                    "description": "Resource ID path of the asset.\n",
                    "type": "string",
                    "example": "/_system/governance/mobileapps/admin/android/test/1.0"
                },
                "lifecycle": {
                    "description": "lifecycle type of the asset\n",
                    "type": "string",
                    "example": "MobileAppLifeCycle"
                },
                "lifecycleState": {
                    "description": "lifecycle state of the asset\n",
                    "type": "string",
                    "example": "Created"
                },
                "rating": {
                    "description": "User rating for the app\n",
                    "type": "number",
                    "example": 4
                },
                "appUrL": {
                    "description": "URL of the asset\n",
                    "type": "string",
                    "example": "/publisher/api/mobileapp/getfile/WKzeMgMhOrGvwTy.apk"
                },
                "bundleversion": {
                    "description": "Bundleversion of the asset\n",
                    "type": "string",
                    "example": "1.0"
                },
                "category": {
                    "description": "category of the asset\n",
                    "type": "string",
                    "example": "Business"
                },
                "displayName": {
                    "description": "displayName of the asset\n",
                    "type": "string",
                    "example": "testapp1"
                },
                "screenshots": {
                    "description": "Screenshots attached to the application\n",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "/publisher/api/mobileapp/getfile/TJXfaEeHsdeYSFS.jpg",
                        "/publisher/api/mobileapp/getfile/aCJ1MXUXWGGHS3t.JPG",
                        "/publisher/api/mobileapp/getfile/FcFEWkaLroetXlq.JPG"
                    ]
                },
                "banner": {
                    "description": "/publisher/api/mobileapp/getfile/uWnObGDXigTO7pl.jpg\n",
                    "type": "string",
                    "example": "/publisher/api/mobileapp/getfile/TJXfaEeHsdeYSFS.jpg,/publisher/api/mobileapp/getfile/aCJ1MXUXWGGHS3t.JPG,/publisher/api/mobileapp/getfile/FcFEWkaLroetXlq.JPG"
                },
                "createdtime": {
                    "description": "createdtime of the asset\n",
                    "type": "string",
                    "example": "00000001458300149192"
                },
                "platform": {
                    "description": "platform of the asset\n",
                    "type": "string",
                    "example": "android"
                },
                "appType": {
                    "description": "mobile app type (eg: webapp/ios/android)",
                    "type": "string",
                    "example": "android"
                },
                "mediaType": {
                    "description": "media yype",
                    "type": "string",
                    "example": "application/vnd.wso2-mobileapp+xml"
                },
                "lifecycleAvailableActions": {
                    "description": "platform of the asset\n",
                    "type": "string",
                    "example": "[Submit for Review]"
                },
                "createdTime": {
                    "description": "asset created timestamp",
                    "type": "string",
                    "example": "00000001459919490157"
                },
                "customProperties":{
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CustomProperty"
                    }
                }
            }
        },
        "DocumentList": {
            "title": "Document List",
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Number of Documents returned.\n",
                    "example": 1
                },
                "next": {
                    "type": "string",
                    "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n",
                    "example": "/apis/01234567-0123-0123-0123-012345678901/documents?limit=1&offset=2"
                },
                "previous": {
                    "type": "string",
                    "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n",
                    "example": "/apis/01234567-0123-0123-0123-012345678901/documents?limit=1&offset=0"
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Document"
                    }
                }
            }
        },
        "Document": {
            "title": "Document",
            "required": [
                "name",
                "type",
                "sourceType"
            ],
            "properties": {
                "documentId": {
                    "type": "string",
                    "example": "01234567-0123-0123-0123-012345678901"
                },
                "name": {
                    "type": "string",
                    "example": "CalculatorDoc"
                },
                "type": {
                    "type": "string",
                    "enum": [
                        "HOWTO",
                        "SAMPLES",
                        "PUBLIC_FORUM",
                        "SUPPORT_FORUM",
                        "API_MESSAGE_FORMAT",
                        "SWAGGER_DOC",
                        "OTHER"
                    ],
                    "example": "HOWTO"
                },
                "summary": {
                    "type": "string",
                    "example": "Summary of Calculator Documentation"
                },
                "sourceType": {
                    "type": "string",
                    "enum": [
                        "INLINE",
                        "URL",
                        "FILE"
                    ],
                    "example": "INLINE"
                },
                "sourceUrl": {
                    "type": "string",
                    "example": ""
                },
                "fileName": {
                    "type": "string",
                    "example": "SampleDoc.pdf"
                },
                "otherTypeName": {
                    "type": "string",
                    "example": ""
                }
            }
        },
        "Binary": {
            "title": "upload binary",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string",
                    "example": "/api/getFile/DTRDOIO787.apk"
                },
                "package": {
                    "type": "string",
                    "example": "sample.calc"
                },
                "version": {
                    "type": "string",
                    "example": "1.0"
                }
            }
        },
        "StaticContent": {
            "title": "upload static content like image, documentation",
            "required": [
                "path"
            ],
            "properties": {
                "path": {
                    "type": "string",
                    "example": "/api/getFile/IUYFGF98098.jpg"
                }
            }
        },
        "ResponseMessage": {
            "title": "Reponse message returned at successful API invocation",
            "required": [
                "message"
            ],
            "properties": {
                "message": {
                    "type": "string",
                    "example": "API has been successfully invoked"
                }
            }
        },
        "TagList": {
            "title": "Tag List",
            "properties": {
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "tag1",
                        "tag2",
                        "tag3"
                    ],
                    "description": "List of Tags"
                }
            }
        },
        "TierList": {
            "title": "Throttle Tier details.",
            "properties": {
                "tierList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Tier"
                    }
                }
            }
        },
        "Tier": {
            "title": "Throttle Tier details.",
            "properties": {
                "tierName": {
                    "type": "string",
                    "example": "Gold"
                },
                "tierDisplayName": {
                    "type": "string",
                    "example": "Gold"
                },
                "tierDescription": {
                    "type": "string",
                    "example": "Gold tier with limit 20 request"
                },
                "tierSortKey": {
                    "type": "integer",
                    "example": "1"
                }
            }
        },
        "PolicyPartial": {
            "title": "Policy Partial",
            "required": [
                "policyPartial"
            ],
            "properties": {
                "policyPartialId": {
                    "type": "integer",
                    "description": "ID of the policy\n",
                    "example": "1"
                },
                "policyPartialName": {
                    "type": "string",
                    "description": "Name of the policy\n",
                    "example": "policy1"
                },
                "policyPartial": {
                    "type": "string",
                    "description": "policy content\n",
                    "example": "xacml policy implementation"
                },
                "isSharedPartial": {
                    "type": "boolean",
                    "description": "whether shared or not",
                    "example": "true/false"
                },
                "policyPartialDesc": {
                    "type": "string",
                    "description": "description about the policy"
                }
            }
        },
        "PolicyPartialList": {
            "title": "Policy Partial List",
            "properties": {
                "count": {
                    "type": "integer",
                    "description": "Number of App returned.\n",
                    "example": 1
                },
                "next": {
                    "type": "string",
                    "description": "Link to the next subset of resources qualified.\nEmpty if no more resources are to be returned.\n",
                    "example": "/xacmlpolicies?limit=1&offset=2&query="
                },
                "previous": {
                    "type": "string",
                    "description": "Link to the previous subset of resources qualified.\nEmpty if current subset is the first subset returned.\n",
                    "example": "/xacmlpolicies?limit=1&offset=0&query="
                },
                "policyList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PolicyPartialInfo"
                    }
                }
            }
        },
        "PolicyPartialInfo": {
            "title": "Policy Partial",
            "properties": {
                "policyPartialId": {
                    "type": "integer",
                    "description": "ID of the policy\n",
                    "example": "1"
                },
                "policyPartialName": {
                    "type": "string",
                    "description": "name of the policy\n",
                    "example": "policy1"
                }
            }
        },
        "UserIdList": {
            "title": "User List",
            "properties": {
                "userIds": {
                    "type": "object",
                    "description": "List of User Names"
                }
            }
        },
        "RoleIdList": {
            "title": "Role List",
            "properties": {
                "roleIds": {
                    "type": "object",
                    "description": "List of Role Id's"
                }
            }
        },
        "JavaPolicyList": {
            "title": "Java Policy List",
            "properties": {
                "policyList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/JavaPolicy"
                    }
                }
            }
        },
        "JavaPolicy": {
            "title": "JavaPolicy object",
            "required": [
                "displayName"
            ],
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "java policy id\n",
                    "example": "1"
                },
                "displayName": {
                    "type": "string",
                    "example": "stats handler"
                },
                "description": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer",
                    "description": "display order of the policy in UI\n",
                    "example": "1"
                }
            }
        },
        "LifeCycle": {
            "title": "LifeCycle object",
            "properties": {
                "state": {
                    "type": "string"
                },
                "actions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "async": {
                    "type": "boolean"
                }
            }
        },
        "LifeCycleHistory": {
            "title": "LifeCycleHistory object",
            "properties": {
                "order": {
                    "type": "integer",
                    "description": "Sequence order Id.\n",
                    "example": "1"
                },
                "state": {
                    "type": "string",
                    "description": "Current Lifecycle state.\n",
                    "example": "Initial"
                },
                "targetState": {
                    "type": "string",
                    "description": "Next/target Lifecycle state.\n",
                    "example": "Created"
                },
                "timestamp": {
                    "type": "string",
                    "description": "Executed time.\n",
                    "example": "2016-04-27 09:48:41.408"
                },
                "user": {
                    "type": "string",
                    "description": "Executed user.\n",
                    "example": "admin"
                }
            }
        },
        "LifeCycleHistoryList": {
            "title": "List of lifecycle change activities",
            "properties": {
                "lifeCycleHistoryList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LifeCycleHistory"
                    }
                }
            }
        },
        "PListAssets": {
            "title": "PList related Asset details.",
            "properties": {
                "kind": {
                    "type": "string",
                    "example": "software-package"
                },
                "url": {
                    "type": "string",
                    "example": "http://localhost:9763/api/appm/store/v1.1/apps/publisher/api/mobileapp/getfile/XURc4DnX0LEfRBm.apk,/publisher/api/mobileapp/getfile/OUGc8DnX0LEGRBm.ipa"
                }
            }
        },
        "PListInfo": {
            "title": "PList object",
            "properties": {
                "PListAssets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PListAssets"
                    }
                },
                "bundleIdentifier": {
                    "type": "string"
                },
                "bundleVersion": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "PList": {
            "title": "PList object",
            "properties": {
                "PListAssets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PListInfo"
                    }
                }
            }
        },
        "StatSummary": {
            "title": "Stat Summary details",
            "properties": {
                "result": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                }
            }
        },
        "BusinessOwnerList": {
            "title": "BusinessOwnerList details.",
            "properties": {
                "businessOwnerList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BusinessOwner"
                    }
                }
            }
        },
        "BusinessOwner": {
            "title": "BusinessOwner object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": "1"
                },
                "name": {
                    "type": "string",
                    "example": "admin"
                },
                "description": {
                    "type": "string"
                },
                "email": {
                    "type": "string",
                    "example": "admin@wso2.com"
                },
                "site": {
                    "type": "string",
                    "example": "www.wso2.com"
                },
                "properties": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/BusinessOwnerProperties"
                    }
                }
            }
        },
        "BusinessOwnerProperties": {
            "title": "BusinessOwnerProperties object",
            "properties": {
                "key": {
                    "type": "string",
                    "example": "age"
                },
                "value": {
                    "type": "string",
                    "example": "20"
                },
                "isVisible": {
                    "type": "boolean"
                }
            }
        },
        "UriTemplate": {
            "title": "URI Template Definition",
            "properties": {
                "id": {
                    "type": "integer",
                    "description": "ID of the URI Template\n",
                    "example": "1"
                },
                "urlPattern": {
                    "type": "string",
                    "description": "URL pattern of the URI\n",
                    "example": "/user/details"
                },
                "httpVerb": {
                    "type": "string",
                    "description": "Http verb of the uri pattern\n",
                    "example": "GET,POST,PUT,DELETE,OPTION"
                },
                "policyGroupName": {
                    "type": "string",
                    "description": "The name of the uri template policy group\n",
                    "example": "default"
                },
                "policyGroupId": {
                    "type": "integer",
                    "description": "Database ID of the associated policy group.\n",
                    "example": "default"
                }
            }
        },
        "PolicyGroups": {
            "title": "Policy Group Definition",
            "properties": {
                "policyGroupId": {
                    "type": "integer",
                    "description": "Id of the policy group\n",
                    "example": "1"
                },
                "policyGroupName": {
                    "type": "string",
                    "description": "Name of the policy group\n",
                    "example": "default"
                },
                "description": {
                    "type": "string",
                    "description": "Description of the policy group\n",
                    "example": "Default policy group"
                },
                "throttlingTier": {
                    "type": "string",
                    "description": "Throttling tier\n",
                    "example": "Bronze,Silver,Gold,Unlimited"
                },
                "userRoles": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The name of the uri template policy group\n",
                    "example": [
                        "admin"
                    ]
                },
                "policyPartialMapping": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Entitlement policy partial name list\n",
                    "example": [
                        "sample"
                    ]
                },
                "allowAnonymousAccess": {
                    "type": "string",
                    "description": "Allow anonymous access to mobile\n",
                    "example": "GET,POST,PUT,DELETE,OPTION"
                }
            }
        },
        "Error": {
            "title": "Error object returned with 4XX HTTP status",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int64"
                },
                "message": {
                    "type": "string",
                    "description": "Error message."
                },
                "description": {
                    "type": "string",
                    "description": "A detail description about the error message.\n"
                },
                "moreInfo": {
                    "type": "string",
                    "description": "Preferably an url with more details about the error.\n"
                },
                "error": {
                    "type": "array",
                    "description": "If there are more than one error list them out.\nFor example, list out validation errors by each field.\n",
                    "items": {
                        "$ref": "#/definitions/ErrorListItem"
                    }
                }
            }
        },
        "ErrorListItem": {
            "title": "Description of individual errors that may have occurred during a request.",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string",
                    "description": "Description about individual errors occurred\n"
                }
            }
        },
        "CustomProperty": {
            "title": "The DTO for a custom app property",
            "required": [
                "name",
                "value"
            ],
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        }
    }
}